{"version":3,"file":"static/js/650.2a117e49.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/movieList/MovieList.module.css?db32","components/movieList/MovieList.jsx","webpack://react-homework-template/./src/pages/movies/Movies.module.css?c186","webpack://react-homework-template/./src/components/searchForm/SearchForm.module.css?1aef","components/searchForm/SearchForm.jsx","pages/movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__P2D1V\",\"movieListItem\":\"MovieList_movieListItem__IzB8g\",\"movieListItemLink\":\"MovieList_movieListItemLink__EoQdD\",\"moviePoster\":\"MovieList_moviePoster__4fw-i\",\"movieTitle\":\"MovieList_movieTitle__ywUBS\",\"movieReleaseDate\":\"MovieList_movieReleaseDate__e2kdE\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport css from './MovieList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const defaultImage =\n    'https://upload.wikimedia.org/wikipedia/commons/6/6c/No_image_3x4.svg';\n\n  return (\n    <ul className={css.movieList}>\n      {movies.map(({ id, title, release_date, poster_path }) => (\n        <li key={id} className={css.movieListItem}>\n          <Link\n            to={`/movies/${id}`}\n            state={{ from: location }}\n            className={css.movieListItemLink}\n          >\n            <img\n              className={css.moviePoster}\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                  : defaultImage\n              }\n              alt={title}\n            />\n            <h2 className={css.movieTitle}>{title}</h2>\n            <p className={css.movieReleaseDate}>Release date: {release_date}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__nrZs1\",\"title\":\"Movies_title__YobY0\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchBox\":\"SearchForm_searchBox__ZCjgB\",\"searchInput\":\"SearchForm_searchInput__y1z-I\",\"searchButton\":\"SearchForm_searchButton__WNmhq\"};","import { useSearchParams } from 'react-router-dom';\nimport { FiSearch } from 'react-icons/fi';\nimport PropTypes from 'prop-types';\n\nimport css from './SearchForm.module.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('name') || '';\n\n  const handleChange = evt => {\n    const name = evt.target.value;\n    if (!name) {\n      alert('Name cannot be empty');\n      return;\n    }\n    const nextParams = { name };\n    setSearchParams(nextParams);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.searchBox}>\n      <input\n        type=\"text\"\n        onChange={handleChange}\n        autoComplete=\"off\"\n        name=\"\"\n        value={query}\n        autoFocus\n        placeholder=\"Search movies\"\n        className={css.searchInput}\n      />\n      <button type=\"submit\" className={css.searchButton}>\n        <b className={css.materialIcons}>\n          <FiSearch />\n        </b>\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport css from './Movies.module.css';\n\nimport * as API from '../../services/api';\n\nimport MovieList from 'components/movieList/MovieList';\nimport SearchForm from 'components/searchForm/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (query) {\n        try {\n          const data = await API.getSearchedMovies(query);\n          setMovies(data);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    fetchMovies();\n  }, [query, setSearchParams]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <div className={css.container}>\n      <div className={css.title}>Find Your Movies here..</div>\n      <SearchForm onSubmit={handleSubmit} query={query} />\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd95cade1dc5c92803fa23ff687afbf7e';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return [];\n  }\n};\n\nexport const getSearchedMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return [];\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n"],"names":["movies","location","useLocation","className","css","map","id","title","release_date","poster_path","to","state","from","src","alt","onSubmit","useSearchParams","searchParams","setSearchParams","query","get","evt","preventDefault","type","onChange","name","target","value","alert","autoComplete","autoFocus","placeholder","useState","setMovies","useEffect","fetchMovies","API","data","console","log","length","MovieList","BASE_URL","API_KEY","getTrendingMovies","axios","response","results","getSearchedMovies","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}