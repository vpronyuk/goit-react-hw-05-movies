{"version":3,"file":"static/js/89.d249a9a4.chunk.js","mappings":"oPACA,EAA6B,4BAA7B,EAAkE,wBAAlE,EAAmG,wBAAnG,EAAqI,yB,SCoDrI,EA9CgB,WACd,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAoDF,EAAAA,EAAAA,WAAS,GAA7D,eAAOG,EAAP,KAA2BC,EAA3B,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA8BF,GAA9B,gGAEiCG,EAAAA,GAAoBH,GAFrD,OAEUI,EAFV,OAGIP,EAAcO,GACdL,GAAsB,GAJ1B,gDAMIM,QAAQC,IAAI,KAAMC,SANtB,yDADc,yBAAC,SAAD,2BAUdC,CAAeR,EAChB,GAAE,CAACA,IAEsB,IAAtBJ,EAAWa,QAAgBX,GACtB,uDAIP,0BACE,eAAIY,UAAWC,EAAf,SACGf,EAAWgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACd,gBAAaL,UAAWC,EAAxB,WACE,gBAAID,UAAWC,EAAf,qBAAoCG,MACpC,cAAGJ,UAAWC,EAAd,SAA4BI,MAFrBF,EADK,OASvB,C,+LCvCKG,EAAW,+BACXC,EAAU,mCAEHC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,wCACsBC,IAHhB,cAEvBG,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,uCAO7BjB,QAAQC,IAAI,eAAZ,MAP6B,kBAQtB,IARsB,yDAAH,qDAYjBiB,EAAiB,mCAAG,WAAMC,GAAN,gGAENL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CO,EAD/C,gCAFM,cAEvBJ,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,uCAO7BjB,QAAQC,IAAI,eAAZ,MAP6B,kBAQtB,IARsB,yDAAH,sDAYjBmB,EAAe,mCAAG,WAAMzB,GAAN,gGAEJmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAhB,EADA,oBACmBiB,EADnB,oBAFI,cAErBG,EAFqB,yBAKpBA,EAASC,MALW,uCAO3BhB,QAAQC,IAAI,eAAZ,MAP2B,kBAQpB,MARoB,yDAAH,sDAYfoB,EAAY,mCAAG,WAAM1B,GAAN,gGAEDmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAhB,EADA,4BAC2BiB,EAD3B,oBAFC,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKM,MALG,uCAOxBtB,QAAQC,IAAI,eAAZ,MAPwB,kBAQjB,MARiB,yDAAH,sDAYZsB,EAAe,mCAAG,WAAM5B,GAAN,gGAEJmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAhB,EADA,4BAC2BiB,EAD3B,2BAFI,cAErBG,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,uCAO3BjB,QAAQC,IAAI,eAAZ,MAP2B,kBAQpB,MARoB,yDAAH,qD","sources":["webpack://react-homework-template/./src/components/reviews/Reviews.module.css?9ce4","components/reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"Reviews_reviewList__tQo0v\",\"review\":\"Reviews_review__LBsD3\",\"author\":\"Reviews_author__oBq9f\",\"content\":\"Reviews_content__pL4aV\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport * as API from '../../services/api';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviewInfo, setReviewInfo] = useState([]);\n  const [isReviewInfoLoaded, setIsReviewInfoLoaded] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function loadReviewInfo(movieId) {\n      try {\n        const reviewResponse = await API.getMovieReviews(movieId);\n        setReviewInfo(reviewResponse);\n        setIsReviewInfoLoaded(true);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    loadReviewInfo(movieId);\n  }, [movieId]);\n\n  if (reviewInfo.length === 0 && isReviewInfoLoaded) {\n    return <h2>No reviews for this movie</h2>;\n  }\n\n  return (\n    <div>\n      <ul className={css.reviewList}>\n        {reviewInfo.map(({ id, author, content }) => (\n          <li key={id} className={css.review}>\n            <h3 className={css.author}>Author: {author}</h3>\n            <p className={css.content}>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  reviewInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd95cade1dc5c92803fa23ff687afbf7e';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return [];\n  }\n};\n\nexport const getSearchedMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return [];\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n"],"names":["useState","reviewInfo","setReviewInfo","isReviewInfoLoaded","setIsReviewInfoLoaded","movieId","useParams","useEffect","API","reviewResponse","console","log","message","loadReviewInfo","length","className","css","map","id","author","content","BASE_URL","API_KEY","getTrendingMovies","axios","response","data","results","getSearchedMovies","query","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}