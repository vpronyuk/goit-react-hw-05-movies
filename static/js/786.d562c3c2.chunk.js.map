{"version":3,"file":"static/js/786.d562c3c2.chunk.js","mappings":"sPACA,EAA2B,uBAA3B,EAAiE,2BAAjE,EAA2J,yBAA3J,EAAgM,wBAAhM,EAAwO,4B,SCyDxO,EApDa,WACX,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA4BF,GAA5B,gGAE2BG,EAAAA,GAAiBH,GAF5C,OAEUI,EAFV,OAGIP,EAAYO,GACZL,GAAgB,GAJpB,gDAMIM,QAAQC,IAAI,KAAMC,SANtB,yDADc,yBAAC,SAAD,2BAUdC,CAAaR,EACd,GAAE,CAACA,IAEoB,IAApBJ,EAASa,QAAgBX,GACpB,gEAIP,4BACE,wCACA,eAAIY,UAAWC,EAAf,SACGf,EAASgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACZ,gBAAaN,UAAWC,EAAxB,UACGG,GACC,gBACEJ,UAAWC,EACXM,IAAG,yCAAoCH,GACvCI,IAAKH,KAGP,gBACEL,UAAWC,EACXM,IAAG,uEACHC,IAAKH,KAGT,4BACE,eAAIL,UAAWC,EAAf,SAA+BI,KAC/B,eAAGL,UAAWC,EAAd,wBAA6CK,UAhBxCH,EADG,QAwBrB,C,+LCnDD,EALe,CACbM,SAAU,+BACVC,QAAS,oCCCEC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,SADkB,wCAC6BA,EAAAA,UAHvB,cAEvBnB,EAFuB,OAK7BC,QAAQC,IAAIF,EAASoB,KAAKC,SALG,kBAMtBrB,EAASoB,KAAKC,SANQ,uCAQ7BpB,QAAQC,IAAI,eAAZ,MAR6B,kBAStB,IATsB,yDAAH,qDAajBoB,EAAiB,mCAAG,WAAMC,GAAN,gGAENL,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,SADkB,iCACsBA,EAAAA,QADtB,iCAC6DI,EAD7D,gCAFM,cAEvBvB,EAFuB,yBAKtBA,EAASoB,KAAKC,SALQ,uCAO7BpB,QAAQC,IAAI,eAAZ,MAP6B,kBAQtB,IARsB,yDAAH,sDAYjBsB,EAAe,mCAAG,WAAM5B,GAAN,gGAEJsB,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,SADkB,kBACOvB,EADP,oBAC0BuB,EAAAA,QAD1B,oBAFI,cAErBnB,EAFqB,yBAKpBA,EAASoB,MALW,uCAO3BnB,QAAQC,IAAI,eAAZ,MAP2B,kBAQpB,MARoB,yDAAH,sDAYfuB,EAAY,mCAAG,WAAM7B,GAAN,gGAEDsB,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,SADkB,kBACOvB,EADP,4BACkCuB,EAAAA,QADlC,oBAFC,cAElBnB,EAFkB,yBAKjBA,EAASoB,KAAKM,MALG,uCAOxBzB,QAAQC,IAAI,eAAZ,MAPwB,kBAQjB,MARiB,yDAAH,sDAYZyB,EAAe,mCAAG,WAAM/B,GAAN,gGAEJsB,EAAAA,EAAAA,IAAA,UAClBC,EAAAA,SADkB,kBACOvB,EADP,4BACkCuB,EAAAA,QADlC,2BAFI,cAErBnB,EAFqB,yBAKpBA,EAASoB,KAAKC,SALM,uCAO3BpB,QAAQC,IAAI,eAAZ,MAP2B,kBAQpB,MARoB,yDAAH,qD","sources":["webpack://react-homework-template/./src/components/castNew/Cast.module.css?e71f","components/castNew/Cast.jsx","services/config.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__+b55v\",\"castListItem\":\"Cast_castListItem__8CWja\",\"castListItemLink\":\"Cast_castListItemLink__iuysb\",\"castPoster\":\"Cast_castPoster__FYWQ9\",\"castTitle\":\"Cast_castTitle__USXP5\",\"castCharacter\":\"Cast_castCharacter__49y8c\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as API from '../../services/api';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [castInfo, setCastInfo] = useState([]);\n  const [isCastLoaded, setIsCastLoaded] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function loadCastInfo(movieId) {\n      try {\n        const response = await API.getMovieCast(movieId);\n        setCastInfo(response);\n        setIsCastLoaded(true);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    loadCastInfo(movieId);\n  }, [movieId]);\n\n  if (castInfo.length === 0 && isCastLoaded) {\n    return <h2>No cast information for this movie</h2>;\n  }\n\n  return (\n    <div>\n      <h2>Movie Cast</h2>\n      <ul className={css.castList}>\n        {castInfo.map(({ id, profile_path, name, character }) => (\n          <li key={id} className={css.castListItem}>\n            {profile_path ? (\n              <img\n                className={css.castPoster}\n                src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n                alt={name}\n              />\n            ) : (\n              <img\n                className={css.castPoster}\n                src={`https://upload.wikimedia.org/wikipedia/commons/6/6c/No_image_3x4.svg`}\n                alt={name}\n              />\n            )}\n            <div>\n              <h2 className={css.castTitle}>{name}</h2>\n              <p className={css.castCharacter}>Character: {character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","const config = {\n  BASE_URL: 'https://api.themoviedb.org/3',\n  API_KEY: 'd95cade1dc5c92803fa23ff687afbf7e',\n};\n\nexport default config;\n","import axios from 'axios';\nimport config from './config';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${config.BASE_URL}/trending/movie/week?api_key=${config.API_KEY}`\n    );\n    console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return [];\n  }\n};\n\nexport const getSearchedMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${config.BASE_URL}/search/movie?api_key=${config.API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return [];\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${config.BASE_URL}/movie/${movieId}?api_key=${config.API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${config.BASE_URL}/movie/${movieId}/credits?api_key=${config.API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${config.BASE_URL}/movie/${movieId}/reviews?api_key=${config.API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n"],"names":["useState","castInfo","setCastInfo","isCastLoaded","setIsCastLoaded","movieId","useParams","useEffect","API","response","console","log","message","loadCastInfo","length","className","css","map","id","profile_path","name","character","src","alt","BASE_URL","API_KEY","getTrendingMovies","axios","config","data","results","getSearchedMovies","query","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}