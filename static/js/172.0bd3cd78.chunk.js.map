{"version":3,"file":"static/js/172.0bd3cd78.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/movieListNew/MovieList.module.css?1e95","components/movieListNew/MovieList.jsx","webpack://react-homework-template/./src/pages/moviesNew/Movies.module.css?6053","webpack://react-homework-template/./src/components/searchFormNew/SearchForm.module.css?0d04","components/searchFormNew/SearchForm.jsx","pages/moviesNew/Movies.jsx","services/config.js","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__N4-WD\",\"movieListItem\":\"MovieList_movieListItem__4Uw7x\",\"movieListItemLink\":\"MovieList_movieListItemLink__4XIP3\",\"moviePoster\":\"MovieList_moviePoster__XT1lf\",\"movieTitle\":\"MovieList_movieTitle__AG2ym\",\"movieReleaseDate\":\"MovieList_movieReleaseDate__pGkMv\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport css from './MovieList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.movieList}>\n      {movies.map(({ id, title, release_date, poster_path }) => (\n        <li key={id} className={css.movieListItem}>\n          <Link\n            className={css.movieListItemLink}\n            state={{ from: location }}\n            to={`/movies/${id}`}\n          >\n            <img\n              className={css.moviePoster}\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt={title}\n            />\n            <h2 className={css.movieTitle}>{title}</h2>\n            <p className={css.movieReleaseDate}>Release date: {release_date}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__7nCXg\",\"title\":\"Movies_title__cvsNL\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchBox\":\"SearchForm_searchBox__zsnGY\",\"searchInput\":\"SearchForm_searchInput__Z+3Xy\",\"searchButton\":\"SearchForm_searchButton__pLYaX\"};","import { useSearchParams } from 'react-router-dom';\nimport { FiSearch } from 'react-icons/fi';\nimport PropTypes from 'prop-types';\n\nimport css from './SearchForm.module.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('name') ?? '';\n\n  const handleChange = evt => {\n    const name = evt.target.value;\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.searchBox}>\n      <input\n        type=\"text\"\n        onChange={handleChange}\n        autoComplete=\"off\"\n        name=\"\"\n        value={query}\n        autoFocus\n        placeholder=\"Search movies\"\n        className={css.searchInput}\n      />\n      <button type=\"submit\" className={css.searchButton}>\n        <b className={css.materialIcons}>\n          <FiSearch />\n        </b>\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\n\nimport * as API from '../../services/api';\n\nimport MovieList from 'components/movieListNew/MovieList';\nimport SearchForm from 'components/searchFormNew/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query') ?? '');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (query) {\n        try {\n          const data = await API.getSearchedMovies(query);\n          setSearchParams('');\n          setMovies(data);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n\n    fetchMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  const handleSubmit = query => {\n    setQuery(query);\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <div className={css.container}>\n      <div className={css.title}>Search Your Movies here..</div>\n      {/* <div className={css.subTitle}>Click on Search button..</div> */}\n      <SearchForm onSubmit={handleSubmit} query={query} />\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","const config = {\n  BASE_URL: 'https://api.themoviedb.org/3',\n  API_KEY: 'd95cade1dc5c92803fa23ff687afbf7e',\n};\n\nexport default config;\n","import axios from 'axios';\nimport config from './config';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${config.BASE_URL}/trending/movie/week?api_key=${config.API_KEY}`\n    );\n    console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return [];\n  }\n};\n\nexport const getSearchedMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${config.BASE_URL}/search/movie?api_key=${config.API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return [];\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${config.BASE_URL}/movie/${movieId}?api_key=${config.API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${config.BASE_URL}/movie/${movieId}/credits?api_key=${config.API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${config.BASE_URL}/movie/${movieId}/reviews?api_key=${config.API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n"],"names":["movies","location","useLocation","className","css","map","id","title","release_date","poster_path","state","from","to","src","alt","onSubmit","useSearchParams","searchParams","setSearchParams","query","get","evt","preventDefault","type","onChange","name","target","value","autoComplete","autoFocus","placeholder","useState","setMovies","setQuery","useEffect","fetchMovies","API","data","console","log","length","MovieList","BASE_URL","API_KEY","getTrendingMovies","axios","config","response","results","getSearchedMovies","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}