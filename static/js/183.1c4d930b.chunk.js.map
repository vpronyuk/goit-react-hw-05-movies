{"version":3,"file":"static/js/183.1c4d930b.chunk.js","mappings":"sPACA,EAA2B,uBAA3B,EAAiE,2BAAjE,EAA2J,yBAA3J,EAAgM,wBAAhM,EAAwO,4B,SCuDxO,EAlDa,WACX,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA4BF,GAA5B,gGAE2BG,EAAAA,GAAiBH,GAF5C,OAEUI,EAFV,OAGIP,EAAYO,GACZL,GAAgB,GAJpB,gDAMIM,QAAQC,IAAI,KAAMC,SANtB,yDADc,yBAAC,SAAD,2BAUdC,CAAaR,EACd,GAAE,CAACA,IAEoB,IAApBJ,EAASa,QAAgBX,GACpB,gEAIP,4BACE,wCACA,eAAIY,UAAWC,EAAf,SACGf,EAASgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACZ,gBAAaN,UAAWC,EAAxB,WACE,gBACED,UAAWC,EACXM,IACEH,EAAY,yCAC0BA,GA7BlD,uEAgCUI,IAAKH,KAEP,4BACE,eAAIL,UAAWC,EAAf,SAA+BI,KAC/B,eAAGL,UAAWC,EAAd,wBAA6CK,UAZxCH,EADG,QAoBrB,C,+LCpDKM,EAAW,+BACXC,EAAU,mCAEHC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,wCACsBC,IAHhB,cAEvBhB,EAFuB,yBAKtBA,EAASmB,KAAKC,SALQ,uCAO7BnB,QAAQC,IAAI,eAAZ,MAP6B,kBAQtB,IARsB,yDAAH,qDAYjBmB,EAAiB,mCAAG,WAAMC,GAAN,gGAENJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CM,EAD/C,gCAFM,cAEvBtB,EAFuB,yBAKtBA,EAASmB,KAAKC,SALQ,uCAO7BnB,QAAQC,IAAI,eAAZ,MAP6B,kBAQtB,IARsB,yDAAH,sDAYjBqB,EAAe,mCAAG,WAAM3B,GAAN,gGAEJsB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAnB,EADA,oBACmBoB,EADnB,oBAFI,cAErBhB,EAFqB,yBAKpBA,EAASmB,MALW,uCAO3BlB,QAAQC,IAAI,eAAZ,MAP2B,kBAQpB,MARoB,yDAAH,sDAYfsB,EAAY,mCAAG,WAAM5B,GAAN,gGAEDsB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAnB,EADA,4BAC2BoB,EAD3B,oBAFC,cAElBhB,EAFkB,yBAKjBA,EAASmB,KAAKM,MALG,uCAOxBxB,QAAQC,IAAI,eAAZ,MAPwB,kBAQjB,MARiB,yDAAH,sDAYZwB,EAAe,mCAAG,WAAM9B,GAAN,gGAEJsB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAnB,EADA,4BAC2BoB,EAD3B,2BAFI,cAErBhB,EAFqB,yBAKpBA,EAASmB,KAAKC,SALM,uCAO3BnB,QAAQC,IAAI,eAAZ,MAP2B,kBAQpB,MARoB,yDAAH,qD","sources":["webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__1BYq+\",\"castListItem\":\"Cast_castListItem__08c3E\",\"castListItemLink\":\"Cast_castListItemLink__qDjAa\",\"castPoster\":\"Cast_castPoster__dS+JN\",\"castTitle\":\"Cast_castTitle__-CzNx\",\"castCharacter\":\"Cast_castCharacter__3igpb\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as API from '../../services/api';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [castInfo, setCastInfo] = useState([]);\n  const [isCastLoaded, setIsCastLoaded] = useState(false);\n  const { movieId } = useParams();\n  const defaultImage =\n    'https://upload.wikimedia.org/wikipedia/commons/6/6c/No_image_3x4.svg';\n\n  useEffect(() => {\n    async function loadCastInfo(movieId) {\n      try {\n        const response = await API.getMovieCast(movieId);\n        setCastInfo(response);\n        setIsCastLoaded(true);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    loadCastInfo(movieId);\n  }, [movieId]);\n\n  if (castInfo.length === 0 && isCastLoaded) {\n    return <h2>No cast information for this movie</h2>;\n  }\n\n  return (\n    <div>\n      <h2>Movie Cast</h2>\n      <ul className={css.castList}>\n        {castInfo.map(({ id, profile_path, name, character }) => (\n          <li key={id} className={css.castListItem}>\n            <img\n              className={css.castPoster}\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                  : defaultImage\n              }\n              alt={name}\n            />\n            <div>\n              <h2 className={css.castTitle}>{name}</h2>\n              <p className={css.castCharacter}>Character: {character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd95cade1dc5c92803fa23ff687afbf7e';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return [];\n  }\n};\n\nexport const getSearchedMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return [];\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log('Fetch error:', error);\n    return null;\n  }\n};\n"],"names":["useState","castInfo","setCastInfo","isCastLoaded","setIsCastLoaded","movieId","useParams","useEffect","API","response","console","log","message","loadCastInfo","length","className","css","map","id","profile_path","name","character","src","alt","BASE_URL","API_KEY","getTrendingMovies","axios","data","results","getSearchedMovies","query","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}